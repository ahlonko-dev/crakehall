{"version":3,"sources":["../../../src/server/algo/algo.service.js"],"names":["db","require","User","Trees","updateConnectionAlgo","newPlayerMoneyGenerator","date","updateConnectionDate","id","console","log","user","findById","treesUser","find","player_id","leaveToGive","userMoney","Math","floor","money","totalUserLeaveToGive","totalLeaveDivision","updateDateTime","Date","updateUser","err","doc","dateConnect","save","error","newPlayerMoney","req","res","_id","playerId","playerInfo","allUsers","status","send","response","data","message","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable no-var */\n/* eslint-disable object-shorthand */\n/* eslint-disable consistent-return */\n/* eslint-disable require-await */\n/* eslint-disable no-return-await */\n/* eslint-disable no-unmodified-loop-condition */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable no-console */\n/* eslint-disable no-undef */\n/* eslint-disable array-callback-return */\n/* eslint-disable prefer-const */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-unused-vars */\nconst db = require(\"../_helpers/db\");\n\nconst User = db.User;\nconst Trees = db.Trees;\nconst updateConnectionAlgo = require(\"./updateconnectiondate\");\nconst newPlayerMoneyGenerator = require(\"./newplayermoneygenerator\");\nimport date from \"date-and-time\";\n\n// https://www.npmjs.com/package/date-and-time\n\n// Calcule de l'argent à recevoir tous les X temps\nasync function updateConnectionDate(id) {\n    try {\n        console.log(\"updateConnectionDate\");\n        const user = await User.findById(id);\n        const treesUser = await Trees.find({player_id: id});\n        const leaveToGive = await updateConnectionAlgo(user, treesUser);\n        if (leaveToGive != false) {\n            const userMoney = Math.floor(\n                (user.money + leaveToGive.totalUserLeaveToGive) /\n                    leaveToGive.totalLeaveDivision,\n            );\n            const updateDateTime = new Date();\n            const updateUser = await User.findById(id, function (err, doc) {\n                doc.money = userMoney;\n                doc.dateConnect = updateDateTime;\n                doc.save();\n                console.log(\"le prix de l'abre a été déduit\");\n            });\n        } else {\n            console.log(\"Il ne s'est pas assez écoulé de temps\");\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nasync function newPlayerMoney(req, res) {\n    try {\n        console.log(\"==> newPlayerMoney <==\");\n        console.log(req._id);\n        const playerId = req._id;\n        const playerInfo = await User.findById(playerId);\n        const allUsers = await User.find();\n        const money = await newPlayerMoneyGenerator(allUsers);\n        const updateUser = await User.findById(playerId, function (err, doc) {\n            doc.money = money;\n            doc.dateConnect = new Date();\n            doc.status = true;\n            doc.save();\n            console.log(\"Le joueur a recus ses 1er crédits\");\n        });\n    } catch (error) {\n        res.send(error.response.data.message);\n    }\n}\n\nmodule.exports = {\n    updateConnectionDate,\n    newPlayerMoney,\n};\n"],"file":"algo.service.js"}