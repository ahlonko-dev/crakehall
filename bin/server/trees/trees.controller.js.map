{"version":3,"sources":["../../../src/server/trees/trees.controller.js"],"names":["express","require","router","Router","treeService","userService","User","get","getAllTrees","getIdPlayer","newPlayerTreesGenerator","post","buyOtherPlayerTree","buyAFreeTree","lockFreeTree","testfunction","req","res","next","console","log","body","module","exports"],"mappings":"AAAC;AAED,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,WAAW,GAAGH,OAAO,CAAC,iBAAD,CAA3B;;AACA,MAAMI,WAAW,GAAGJ,OAAO,CAAC,uBAAD,CAA3B;;AACA,MAAM;AAACK,EAAAA;AAAD,IAASL,OAAO,CAAC,gBAAD,CAAtB,C,CACA;AAEA;;;AACAC,MAAM,CAACK,GAAP,CAAW,WAAX,EAAwBH,WAAW,CAACI,WAApC,E,CAEA;;AACAN,MAAM,CAACK,GAAP,CAAW,eAAX,EAA4BH,WAAW,CAACK,WAAxC,E,CAEA;;AACAP,MAAM,CAACK,GAAP,CAAW,yBAAX,EAAsCH,WAAW,CAACM,uBAAlD,E,CAEA;;AACAR,MAAM,CAACS,IAAP,CAAY,qBAAZ,EAAmCP,WAAW,CAACQ,kBAA/C,E,CAEA;;AACAV,MAAM,CAACS,IAAP,CAAY,eAAZ,EAA6BP,WAAW,CAACS,YAAzC,E,CAEA;;AACAX,MAAM,CAACS,IAAP,CAAY,WAAZ,EAAyBP,WAAW,CAACU,YAArC;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBrB,MAAjB","sourcesContent":["﻿/* eslint-disable no-unused-vars */\n\nconst express = require(\"express\");\nconst router = express.Router();\nconst treeService = require(\"./trees.service\");\nconst userService = require(\"../users/user.service\");\nconst {User} = require(\"../_helpers/db\");\n//const {RuleTester} = require(\"eslint\");\n\n// Renvois l'ensemble des abres\nrouter.get(\"/alltrees\", treeService.getAllTrees);\n\n// Renvois l'id d'un joueur\nrouter.get(\"/:getidplayer\", treeService.getIdPlayer);\n\n// Donne 3 abres libre aléatoire à un joueur -- :getidplayer => Id du joueur connecté\nrouter.get(\"/newplayer/:getidplayer\", treeService.newPlayerTreesGenerator);\n\n// Permet d'acheter un abre appartenant à un autre joueur non-lock -- :treeid => id de l'abre ciblé :playerid => id du joueur connecté\nrouter.post(\"/buyotherplayertree\", treeService.buyOtherPlayerTree);\n\n// Permet d'acheter un abre libre -- :treeid => id de l'abre ciblé :playerid => id du joueur connecté\nrouter.post(\"/buyafreetree\", treeService.buyAFreeTree);\n\n// Permet de lock un abre en sa possession -- :playerid => id du joueur connecté , :treeid => id de l'abre ciblé\nrouter.post(\"/locktree\", treeService.lockFreeTree);\n\nfunction testfunction(req, res, next) {\n    console.log(req.body);\n}\n\nmodule.exports = router;\n"],"file":"trees.controller.js"}